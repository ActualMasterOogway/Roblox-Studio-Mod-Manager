<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>